// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Remix from "../../src/bindings/Remix.jsx"
import * as Home_hero from "../../src/home_hero.jsx"
import * as React from "@remix-run/react"
import * as JsxRuntime from "react/jsx-runtime"
import * as Json$JsonCombinators from "@glennsl/rescript-json-combinators/src/Json.jsx"
import * as Json_Decode$JsonCombinators from "@glennsl/rescript-json-combinators/src/Json_Decode.jsx"

function headers(
	_actionHeaders,
	_errorHeaders,
	_loaderHeaders,
	_parentHeaders,
) {
	return {
		"Cache-Control": "max-age=300, s-maxage=3600",
	}
}

var decode = Json_Decode$JsonCombinators.array(
	Json_Decode$JsonCombinators.string,
)

var Data = {
	decode: decode,
}

var Loader = Remix.MakeLoader({})

async function loader() {
	var data = await fetch("https://baconipsum.com/api/?type=meat-and-filler")
		.then(function (prim) {
			return prim.json()
		})
		.then(function (t) {
			return Json$JsonCombinators.decode(t, decode)
		})
	var bacon
	if (data.TAG === "Ok") {
		bacon = data._0
	} else {
		console.error(data._0)
		bacon = []
	}
	return React.json({
		foo: "bar",
		data: bacon,
	})
}

function _index(props) {
	var data = React.useLoaderData()
	return JsxRuntime.jsxs(JsxRuntime.Fragment, {
		children: [
			JsxRuntime.jsx(Home_hero.make, {}),
			data.data.map(function (v) {
				return JsxRuntime.jsx(
					"p",
					{
						children: v,
					},
					v,
				)
			}),
		],
	})
}

var make = _index

var $$default = _index

export { headers, Data, Loader, loader, make, $$default as default }
/* decode Not a pure module */
